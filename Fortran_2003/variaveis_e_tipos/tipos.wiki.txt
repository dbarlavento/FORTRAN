Descrição e exemplos dos tipos de dados intrinsecos a Fortran.

Integer
Representa números inteiros.
São escritas da mesma forma que números inteiros comuns.
Uma constante integer é uma string contendo apenas números de 0 a 9.
Uma constante integer pode ser seguida por um caracter '_' e um nome
para designar o parâmetro KIND.
ex.: 	23 0 123456789 -10 42_long 42_short

Real
Representa os números reais.
Fortran permite duas formas de representar constantes reais:
1. 	Positional Form (forma posicional): igual a representação decimal
		mais comum onde o ponto '.' define o valor de cada algarismo.
		assim como o tipo integer é permitido o uso de '_' seguido de um
		nome para representar um tipo para o parâmetro KIND.
Ex.: 	13.5 0.12345 123.45678 00.30_double 0.123456_quad

2.	Exponetial form (forma exponencial): a famosa notação cientifica.
		Consiste de um número real seguido pela letra 'e' e um inteiro
		com ou sem sinal que representa a posição real do ponto decimal.
		Também pode ser usado a notação para o parâmtro KIND.
Ex.: 	23.4e5 para 2340000
			1.0e-9 para 0,000000001
			1.0e-3_double

Complex
Representa números complexos.
São representados por um par ordenado de números na forma (x, y), onde
x e y são do tipo real conforme definição anteiro.
Ex.: 	(1.0, -1.0) (-1.0, 3.1e-27) (3.14_double, -7.0_double)

Logical
Representa os valores lógicos VERDADEIRO e FALSO. Fortran possui duas 
constantes para representa-los:
    .true.    verdadeiro
	 .false.   falso
Tipos de dados logical podem ser alterados por parâmetros KIND 
quando precedidos por '_'.

Operadores aritiméticos 
O operadores aritméticos são utilizados em combinação com os tipos 
integer, real e complex para formar expressões matemáticas.
Os operadores aritméticos em Fortran são:
			+ - * / **
O operador ** é utilizado para a pontenciação.
Ex.: 	4² -> 4**2
Os operadores + e - podem ser utilizados como operadores unários
indicando a operação de identidade e negação, respectivamente.
A divisão inteira remove qualquer parte fracionária do resultado,
25 / 2, resulta 12 e não 12.5.
Para que o resultado seja um número real devem ser usados números reais
na divisão: 25.0 / 2, resulta 12.5.
Caso o dividendo ou divisor seja negativo o resultado será negativo.

Operadores lógicos

Operadores lógicos combinam valores lógicos para formar sentensas 
que podem ser classificadas como VERDADEIRAS ou FALSAS (.true. ou .false.).
Os operadores lógicos em fortran são: .not., .and., .or., .eqv., .neqv..
O operador .not. é um operador unário.
Segue uma tabela com os valores da aplicação dos operadores lógicos:

    p    q    .not. p    p .and. q    p .or. q    p .eqv. q    p .neqv. q
	 V    V       F           V           V            V            F
	 V    F       F           F           V            F            V
	 F    V       V           F           V            F            V
	 F    F       V           F           F            V            F

Operadores relacionais
Em fortran 2003 são:
			<		Menor que
			<= 	Menor ou igual a
			== 	Igual a
			/=		diferente de
			>=		Maior ou igual
			>		Maio que
O resultado de uma expressão relacional é um valor lógico:
Dados do tipo complex só podem ser comparados pelos operadores '==' e '/='.
A comparação de dados dos tipos real e complex utilizando '==' ou '/=' 
pode gerar erros por conta do arredondamento. Para este problema o ideal
é verificar o quanto um número é proximo do outro:
	Se |x - y| < 1.0e-5, então x = y
Em fortran:
	if (abs(x - y) < 1.0e-5) then
		print *, "x == y"
	else 
		print *, "x != y"
	end if
A função abs() retorna o módulo do valor passado como parâmetro.
